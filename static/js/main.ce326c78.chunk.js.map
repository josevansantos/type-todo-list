{"version":3,"sources":["components/Navbar.tsx","services/TodoServices.tsx","context/TodoContext.tsx","components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodo.tsx","components/App.tsx","index.tsx"],"names":["Navbar","className","to","uk-icon","get","data","localStorage","getItem","JSON","parse","TodoContext","createContext","todos","addTodo","removeTodo","toggle","TodoProvider","props","useState","setTodos","useEffect","length","setItem","stringify","Provider","value","title","todo","id","Math","ceil","random","pow","done","index","indexOf","filter","_","i","children","TodoListItem","useContext","type","checked","onChange","onClick","TodoList","map","key","schema","yup","shape","required","AddTodo","useForm","resolver","yupResolver","register","handleSubmit","errors","onSubmit","e","target","reset","window","location","href","name","placeholder","ref","message","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLA0BeA,EAvBA,WACb,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,0BAAvB,aAIF,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,iBACZ,4BACE,kBAAC,IAAD,CAAMC,GAAG,WACP,0BAAMC,UAAQ,kC,eCXjBC,EAAM,WACjB,IAAMC,EAAOC,aAAaC,QAJT,UAIgC,GACjD,IAEE,OADeC,KAAKC,MAAMJ,GAE1B,SACA,MAAO,KCLEK,EAAcC,wBAA+B,CACxDC,MAAO,GACPC,QAAS,aACTC,WAAY,aACZC,OAAQ,eAqCKC,EAlCM,SAACC,GACpB,MAA0BC,mBAAiBd,GAA3C,mBAAOQ,EAAP,KAAcO,EAAd,KAEAC,qBAAU,WDDQ,IAACf,GACX,QADWA,ECEZO,SDDC,IAAJP,OAAA,EAAAA,EAAMgB,SAAU,GAAGf,aAAagB,QAdnB,QAcuCd,KAAKe,UAAUlB,MCEpE,CAACO,IAsBJ,OACE,kBAACF,EAAYc,SAAb,CAAsBC,MAAO,CAAEb,QAAOC,QArBxB,SAACa,GACf,IAAMC,EAAa,CACjBC,GAAIC,KAAKC,KAAKD,KAAKE,SAAWF,KAAKG,IAAI,GAAIpB,EAAMS,SACjDK,MAAOA,EACPO,MAAM,GAERd,EAAS,GAAD,mBAAKP,GAAL,CAAYe,MAe2Bb,WAZ9B,SAACa,GAClB,IAAMO,EAAQtB,EAAMuB,QAAQR,GAC5BR,EAASP,EAAMwB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,OAUqBnB,OAP9C,SAACY,GACd,IAAMO,EAAQtB,EAAMuB,QAAQR,GAC5Bf,EAAMsB,GAAOD,MAAQN,EAAKM,KAC1Bd,EAAS,YAAIP,OAKVK,EAAMsB,WCEEC,EAnCM,SAACvB,GACpB,MAA+BwB,qBAA4B/B,GAAnDI,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAUpB,OACE,wBAAId,UAAU,oCACZ,wBAAIA,UAAU,iBACZ,+BACE,2BACEA,UAAU,cACVyC,KAAK,WACLC,QAAS1B,EAAMU,KAAKM,KACpBW,SAZa,WACrB7B,EAAOE,EAAMU,WAeX,wBAAI1B,UAAU,mBAAmBgB,EAAMU,KAAKD,OAC5C,wBAAIzB,UAAU,iBACZ,4BACEA,UAAU,kCACVE,UAAQ,QACR0C,QAAS,kBAzBClB,EAyBcV,EAAMU,UAxBpCb,EAAWa,GADI,IAACA,QCeLmB,EAtBE,WACf,IAAQlC,EAAU6B,qBAA4B/B,GAAtCE,MAER,OACE,2BAAOX,UAAU,YACf,0CACA,+BACE,4BACE,iCACA,oCACA,+BAGJ,sCACGW,QADH,IACGA,OADH,EACGA,EAAOmC,KAAI,SAACpB,GAAD,OACV,kBAAC,EAAD,CAAcqB,IAAKrB,EAAKC,GAAID,KAAMA,U,+BCbtCsB,EAASC,MAAaC,MAAM,CAChCzB,MAAOwB,MAAaE,SAAS,wBA8ChBC,EAvCC,WAAO,IAAD,EACZxC,EAAY4B,qBAA4B/B,GAAxCG,QACR,EAA2CyC,YAAQ,CACjDC,SAAUC,YAAYP,KADhBQ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAUhC,OACE,0BAAMC,SAAUF,GAPD,SAACrD,EAAmBwD,GACnChD,EAAQR,EAAKqB,OACbmC,EAAEC,OAAOC,QACTC,OAAOC,SAASC,KAAO,QAKrB,2CACA,yBAAKjE,UAAU,0BACb,2BACEyC,KAAK,OACLyB,KAAK,QACLvC,GAAG,QACHwC,YAAY,iBACZnE,UAAU,WACVoE,IAAKZ,IAEP,8BACE,+BACE,4BAAQxD,UAAU,kBAAlB,UAAoC0D,EAAOjC,aAA3C,aAAoC,EAAc4C,YAIxD,yBAAKrE,UAAU,gBACb,4BAAQyC,KAAK,SAASzC,UAAU,+BAAhC,aCjBOsE,EAtBH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,6BACA,yBAAKtE,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuE,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,sDACA,kBAAC,EAAD,YChBdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ce326c78.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <div className=\"uk-container\">\n      <nav className=\"uk-navbar\">\n        <div className=\"uk-navbar-left\">\n          <Link to=\"/\" className=\"uk-navbar-item uk-logo\">\n            My Todos\n          </Link>\n        </div>\n        <div className=\"uk-navbar-right\">\n          <ul className=\"uk-navbar-nav\">\n            <li>\n              <Link to=\"/create\">\n                <span uk-icon=\"icon: plus; ratio: 1.2\"></span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { Todo } from '../models/Todo';\n\nconst TODO_STORE = 'todos';\n\n//Consulta o localStorage\nexport const get = (): Todo[] => {\n  const data = localStorage.getItem(TODO_STORE) || '';\n  try {\n    const result = JSON.parse(data) as Todo[];\n    return result;\n  } catch {\n    return [];\n  }\n};\n\nexport const save = (data: Todo[]) => {\n  if (data?.length >= 1) localStorage.setItem(TODO_STORE, JSON.stringify(data));\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { Todo } from '../models/Todo';\nimport { get, save } from '../services/TodoServices';\nimport { TodoContextType } from './TodoContextType';\n\n//Inicializando o contexto da aplicação\nexport const TodoContext = createContext<TodoContextType>({\n  todos: [],\n  addTodo: () => {},\n  removeTodo: () => {},\n  toggle: () => {},\n});\n\nconst TodoProvider = (props: any) => {\n  const [todos, setTodos] = useState<Todo[]>(get);\n\n  useEffect(() => {\n    save(todos);\n  }, [todos]);\n\n  const addTodo = (title: string) => {\n    const todo: Todo = {\n      id: Math.ceil(Math.random() * Math.pow(10, todos.length)),\n      title: title,\n      done: false,\n    };\n    setTodos([...todos, todo]);\n  };\n\n  const removeTodo = (todo: Todo) => {\n    const index = todos.indexOf(todo);\n    setTodos(todos.filter((_, i) => i !== index));\n  };\n\n  const toggle = (todo: Todo) => {\n    const index = todos.indexOf(todo);\n    todos[index].done = !todo.done;\n    setTodos([...todos]);\n  };\n\n  return (\n    <TodoContext.Provider value={{ todos, addTodo, removeTodo, toggle }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoProvider;\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport { TodoContextType } from '../context/TodoContextType';\nimport { Todo } from '../models/Todo';\n\ninterface TodoListItemProps {\n  todo: Todo;\n}\n\nconst TodoListItem = (props: TodoListItemProps) => {\n  const { removeTodo, toggle } = useContext<TodoContextType>(TodoContext);\n\n  const onRemove = (todo: Todo) => {\n    removeTodo(todo);\n  };\n\n  const handleOnChange = () => {\n    toggle(props.todo);\n  };\n\n  return (\n    <tr className=\"uk-animation-slide-bottom-medium\">\n      <td className=\"uk-width-auto\">\n        <label>\n          <input\n            className=\"uk-checkbox\"\n            type=\"checkbox\"\n            checked={props.todo.done}\n            onChange={handleOnChange}\n          ></input>\n        </label>\n      </td>\n      <td className=\"uk-width-expand\">{props.todo.title}</td>\n      <td className=\"uk-width-auto\">\n        <button\n          className=\"uk-icon-button uk-button-danger\"\n          uk-icon=\"trash\"\n          onClick={() => onRemove(props.todo)}\n        ></button>\n      </td>\n    </tr>\n  );\n};\n\nexport default TodoListItem;\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport { TodoContextType } from '../context/TodoContextType';\nimport TodoListItem from './TodoListItem';\n\nconst TodoList = () => {\n  const { todos } = useContext<TodoContextType>(TodoContext);\n\n  return (\n    <table className=\"uk-table\">\n      <caption>Tasks</caption>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Task</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos?.map((todo) => (\n          <TodoListItem key={todo.id} todo={todo}></TodoListItem>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { TodoContextType } from '../context/TodoContextType';\n\nconst schema = yup.object().shape({\n  title: yup.string().required('Tarefa inválida'),\n});\n\ninterface AddTodoForm {\n  title: string;\n}\n\nconst AddTodo = () => {\n  const { addTodo } = useContext<TodoContextType>(TodoContext);\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data: AddTodoForm, e: any) => {\n    addTodo(data.title);\n    e.target.reset();\n    window.location.href = '/';\n  };\n\n  return (\n    <form onSubmit={handleSubmit<AddTodoForm>(onSubmit)}>\n      <h4>Nova tarefa</h4>\n      <div className=\"uk-margin uk-width-1-1\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Nova tarefa...\"\n          className=\"uk-input\"\n          ref={register}\n        />\n        <span>\n          <small>\n            <strong className=\"uk-text-danger\">{errors.title?.message}</strong>\n          </small>\n        </span>\n      </div>\n      <div className=\"uk-width-1-1\">\n        <button type=\"submit\" className=\"uk-button uk-button-primary\">\n          Salvar\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport TodoList from './TodoList';\nimport TodoContext from '../context/TodoContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AddTodo from './AddTodo';\n\nconst App = () => {\n  return (\n    <TodoContext>\n      <Router>\n        <Navbar></Navbar>\n        <br />\n        <div className=\"uk-container\">\n          <Switch>\n            <Route path=\"/create\">\n              <AddTodo></AddTodo>\n            </Route>\n            <Route path=\"/type-todo-list/\">\n              <h4>Minha lista de tarefas</h4>\n              <TodoList></TodoList>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </TodoContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}